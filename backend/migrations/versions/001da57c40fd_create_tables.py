"""create tables

Revision ID: 001da57c40fd
Revises: 
Create Date: 2023-11-02 18:24:26.069165

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '001da57c40fd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('Fragile', 'Perishable', 'Bulk', name='productcategory'), nullable=False),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('storage_units',
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('availability_status', sa.Enum('available', 'booked', 'under maintenance'), nullable=False),
    sa.CheckConstraint('price >= 0', name='check_price_positive'),
    sa.PrimaryKeyConstraint('unit_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('user_type', sa.Enum('admin', 'client', 'employee'), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('token', sa.String(length=120), nullable=True),
    sa.Column('profile_image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('token')
    )
    op.create_table('payments',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('method', sa.Enum('MPESA', 'PayPal'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('payment_id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_table('pickup_delivery',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('service_type', sa.Enum('pickup', 'delivery'), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'on-transitcompleted'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('reviews',
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('date_submitted', sa.Date(), nullable=False),
    sa.CheckConstraint("comment != '' AND comment IS NOT NULL", name='check_comment_not_empty'),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_validity'),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('bookings',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('storage_unit_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['storage_unit_id'], ['storage_units.unit_id'], ),
    sa.PrimaryKeyConstraint('booking_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('reviews')
    op.drop_table('products')
    op.drop_table('pickup_delivery')
    op.drop_table('payments')
    op.drop_table('users')
    op.drop_table('storage_units')
    op.drop_table('categories')
    # ### end Alembic commands ###
