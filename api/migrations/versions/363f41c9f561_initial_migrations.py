"""initial migrations

Revision ID: 363f41c9f561
Revises: 
Create Date: 2023-11-01 17:17:05.768956

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '363f41c9f561'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status_id')
    )
    op.create_table('storage_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.String(length=50), nullable=True),
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('profile_picture', sa.String(length=300), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('billing_address', sa.String(length=255), nullable=True),
    sa.Column('credit_card_number', sa.String(length=16), nullable=True),
    sa.Column('credit_card_expiration', sa.String(length=5), nullable=True),
    sa.Column('security_code', sa.String(length=3), nullable=True),
    sa.Column('paypal_email', sa.String(length=100), nullable=True),
    sa.Column('mpesa_phone_number', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('customer_id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('log_id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('notification_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('notification_id')
    )
    op.create_table('storage_space',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storage_space_id', sa.Integer(), nullable=False),
    sa.Column('size', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(precision=2), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['storage_location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('storage_space_id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('storage_space_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.Column('delivery_date', sa.DateTime(), nullable=False),
    sa.Column('booking_date', sa.DateTime(), nullable=False),
    sa.Column('booking_status', sa.String(), nullable=False),
    sa.Column('total_price', sa.Float(precision=2), nullable=False),
    sa.Column('payment_status', sa.String(), nullable=False),
    sa.Column('pickup_date_scheduled', sa.DateTime(), nullable=False),
    sa.Column('pickup_date_actual', sa.DateTime(), nullable=False),
    sa.Column('pickup_space_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['pickup_space_id'], ['storage_space.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['order_status.id'], ),
    sa.ForeignKeyConstraint(['storage_space_id'], ['storage_space.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id')
    )
    op.create_table('storage_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storage_space_id', sa.Integer(), nullable=False),
    sa.Column('slot_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('parent_slot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_slot_id'], ['storage_slots.id'], ),
    sa.ForeignKeyConstraint(['storage_space_id'], ['storage_space.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('closed_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('close_reason', sa.String(), nullable=False),
    sa.Column('closure_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discount_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('discount_amount', sa.Float(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discount_id')
    )
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_id')
    )
    op.create_table('pickup_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('pickup_date', sa.DateTime(), nullable=False),
    sa.Column('pickup_address', sa.String(), nullable=False),
    sa.Column('pickup_status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('receipt_date', sa.DateTime(), nullable=False),
    sa.Column('receipt_amount', sa.Float(), nullable=False),
    sa.Column('receipt_number', sa.String(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('review_date', sa.DateTime(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('review_id')
    )
    op.create_table('to_be_picked',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_be_picked_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('to_be_picked_id')
    )
    op.create_table('to_be_received',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_be_received_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('to_be_received_id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('to_be_received')
    op.drop_table('to_be_picked')
    op.drop_table('reviews')
    op.drop_table('receipts')
    op.drop_table('pickup_services')
    op.drop_table('files')
    op.drop_table('discounts')
    op.drop_table('closed_orders')
    op.drop_table('storage_slots')
    op.drop_table('orders')
    op.drop_table('storage_space')
    op.drop_table('notifications')
    op.drop_table('logs')
    op.drop_table('customers')
    op.drop_table('users')
    op.drop_table('storage_location')
    op.drop_table('order_status')
    # ### end Alembic commands ###
